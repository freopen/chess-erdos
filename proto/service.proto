syntax = "proto3";

package chess_erdos;

message Meta { string last_processed_archive = 1; }

message User {
  string id = 1;
  repeated ErdosLink erdos_links = 2;
}

message ErdosLink {
  uint32 erdos_number = 1;
  int64 time = 2;
  string game_id = 3;
  string loser_id = 4;

  string title = 5;
  uint32 rating = 6;
  sint32 rating_diff = 7;

  string loser_title = 8;
  uint32 loser_rating = 9;
  sint32 loser_rating_diff = 10;

  string time_control = 11;
  uint32 moves_count = 12;
  WinType win_type = 13;
  bool winner_is_white = 14;
}

enum WinType {
  MATE = 0;
  TIMEOUT = 1;
  RESIGN = 2;
}

service ChessErdosService {
  rpc GetErdosLinks(GetErdosLinksRequest) returns (GetErdosLinksResponse);
}

message GetErdosLinksRequest { string user_id = 1; }

message ErdosChain { repeated ErdosLink erdos_links = 1; }

message GetErdosLinksResponse {
  string user_id = 1;
  repeated ErdosChain erdos_chains = 2;
}