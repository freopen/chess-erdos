syntax = "proto3";

import "pbdb.proto";

package chess_erdos;

message User {
  string id = 1 [ (pbdb.id) = CASE_INSENSITIVE ];
  int64 first_game = 2;
  repeated ErdosLink erdos_links = 3;
}

enum TimeControlType {
  UNKNOWN_TIME_CONTROL = 0;
  BLITZ = 1;
  RAPID = 2;
  CLASSICAL = 3;
}

enum WinType {
  UNKNOWN_WIN_TYPE = 0;
  CHECKMATE = 1;
  RESIGN = 2;
  TIMEOUT = 3;
}

message ErdosLink {
  int32 erdos_number = 1;
  string loser_id = 2;
  int64 time = 3;

  string winner_title = 4;
  int32 winner_rating = 5;
  int32 winner_rating_diff = 6;

  string loser_title = 7;
  int32 loser_rating = 8;
  int32 loser_rating_diff = 9;

  TimeControlType time_control_type = 10;
  int32 time_control_main = 11;
  int32 time_control_increment = 12;

  string game_id = 13;
  WinType win_type = 14;
  int32 move_count = 15;
  bool winner_is_white = 16;
}

message Metadata {
  option (pbdb.single_record) = true;
  string last_processed_archive = 1;
}

service ChessErdosService {
  rpc GetErdosChains(GetErdosChainsRequest) returns (GetErdosChainsResponse);
}

message GetErdosChainsRequest { string id = 1; }

message ErdosChain { repeated ErdosLink erdos_links = 1; }

message GetErdosChainsResponse {
  string id = 1;
  int32 erdos_number = 2;
  repeated ErdosChain erdos_chains = 3;
}
